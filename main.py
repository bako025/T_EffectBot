import asyncio
import os
from dotenv import load_dotenv

from aiogram import Bot, Dispatcher, F, types
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiogram.fsm.storage.memory import MemoryStorage

# === –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è ===
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")

if not BOT_TOKEN:
    raise ValueError("BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è.")

# === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ ===
bot = Bot(
    token=BOT_TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)
dp = Dispatcher(storage=MemoryStorage())

# === /start ===
@dp.message(F.text == "/start")
async def start_handler(message: types.Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø T-Effect Bot. –ü–æ–¥–±–∏—Ä–∞—é –∫–∏—Ç–∞–π—Å–∫–∏–π —á–∞–π –ø–æ —ç—Ñ—Ñ–µ–∫—Ç—É, –≤–∫—É—Å—É –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é.\n\n"
        "–ù–∞–ø–∏—à–∏ —á—Ç–æ-—Ç–æ –≤—Ä–æ–¥–µ:\n<i>—Ö–æ—á—É —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è</i>\n–∏–ª–∏ –Ω–∞–∂–º–∏ /list –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö —á–∞—ë–≤."
    )

# === /list ===
@dp.message(F.text == "/list")
async def list_handler(message: types.Message):
    teas = ["–î–∞ –•—É–Ω –ü–∞–æ", "–®—É –ü—É—ç—Ä (7581)", "–õ—É–Ω –¶–∑–∏–Ω"]
    await message.answer("üìã –í–æ—Ç —Å–ø–∏—Å–æ–∫ —á–∞—ë–≤:\n\n" + "\n".join(f"‚Ä¢ {t}" for t in teas))

# === /tea <–Ω–∞–∑–≤–∞–Ω–∏–µ> ===
@dp.message(F.text.startswith("/tea"))
async def tea_handler(message: types.Message):
    name = message.text.replace("/tea", "").strip().lower()
    if name == "–¥–∞ —Ö—É–Ω –ø–∞–æ":
        await message.answer("<b>–î–∞ –•—É–Ω –ü–∞–æ</b>\n–¢–∏–ø: –£–ª—É–Ω\n–†–µ–≥–∏–æ–Ω: –£–∏—à–∞–Ω—å\n–≠—Ñ—Ñ–µ–∫—Ç: —Ä–∞—Å—Å–ª–∞–±–ª—è–µ—Ç, —Ñ–æ–∫—É—Å–∏—Ä—É–µ—Ç\n–ó–∞–≤–∞—Ä–∫–∞: –ø—Ä–æ–ª–∏–≤–∞–º–∏ 95-100¬∞C –∏–ª–∏ –≤ —Ç–µ—Ä–º–æ—Å–µ.")
    else:
        await message.answer("‚ö†Ô∏è –ß–∞–π –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π /list –∏–ª–∏ /tea –î–∞ –•—É–Ω –ü–∞–æ.")

# === –ó–∞–ø—É—Å–∫ ===
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())